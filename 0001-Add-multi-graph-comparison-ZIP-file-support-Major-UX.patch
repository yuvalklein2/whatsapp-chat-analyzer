From 2b051f3c4541b38286574d245183579c0036cfc4 Mon Sep 17 00:00:00 2001
From: yuvalklein2 <your.email@example.com>
Date: Wed, 30 Jul 2025 20:33:08 +0300
Subject: [PATCH] =?UTF-8?q?=F0=9F=93=8A=20Add=20multi-graph=20comparison?=
 =?UTF-8?q?=20&=20ZIP=20file=20support=20-=20Major=20UX=20upgrade?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

‚ú® New Features:
‚Ä¢ Multi-graph comparison view for analyzing different time periods
‚Ä¢ Direct ZIP file upload support (auto-extraction)
‚Ä¢ Enhanced emoji chart visibility with larger emojis
‚Ä¢ Smart chart configuration with duplicate/remove options

üéØ Multi-Graph Comparison:
‚Ä¢ Create multiple charts of same type with different date ranges
‚Ä¢ Side-by-side comparison of insights across time periods
‚Ä¢ Individual date range controls per chart
‚Ä¢ Apple-style dialog for chart configuration

üì¶ ZIP File Support:
‚Ä¢ Upload WhatsApp exports directly as ZIP files
‚Ä¢ Automatic .txt file extraction from archives
‚Ä¢ No manual extraction required
‚Ä¢ Enhanced user instructions and error handling

üé® UI/UX Improvements:
‚Ä¢ Larger emoji display in analysis charts (24px ‚Üí 32px tooltip)
‚Ä¢ Visual file type indicators (TXT + ZIP icons)
‚Ä¢ Improved upload instructions
‚Ä¢ Seamless navigation between single and multi-graph views

üõ†Ô∏è Technical:
‚Ä¢ Added JSZip library for client-side ZIP processing
‚Ä¢ Enhanced file upload component with dual format support
‚Ä¢ Clean error handling for malformed archives
‚Ä¢ TypeScript support for all new features

üß≠ Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
---
 package-lock.json                            | 110 +++++++
 package.json                                 |   2 +
 src/app/page.tsx                             |   2 +-
 src/components/Dashboard.tsx                 |  88 ++++--
 src/components/DateRangePicker.tsx           |   2 +-
 src/components/FileUpload.tsx                |  59 +++-
 src/components/MultiGraphManager.tsx         | 286 +++++++++++++++++++
 src/components/StatsCards.tsx                |   2 +-
 src/components/charts/EmojiAnalysisChart.tsx |  14 +-
 9 files changed, 522 insertions(+), 43 deletions(-)
 create mode 100644 src/components/MultiGraphManager.tsx

diff --git a/package-lock.json b/package-lock.json
index f00cb8a..973caf5 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,9 +8,11 @@
       "name": "whatsapp-analyzer",
       "version": "0.1.0",
       "dependencies": {
+        "@types/jszip": "^3.4.0",
         "@types/papaparse": "^5.3.16",
         "@types/recharts": "^1.8.29",
         "date-fns": "^4.1.0",
+        "jszip": "^3.10.1",
         "lucide-react": "^0.534.0",
         "next": "15.4.5",
         "papaparse": "^5.5.3",
@@ -1405,6 +1407,15 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/@types/jszip": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/@types/jszip/-/jszip-3.4.0.tgz",
+      "integrity": "sha512-GFHqtQQP3R4NNuvZH3hNCYD0NbyBZ42bkN7kO3NDrU/SnvIZWMS8Bp38XCsRKBT5BXvgm0y1zqpZWp/ZkRzBzg==",
+      "license": "MIT",
+      "dependencies": {
+        "jszip": "*"
+      }
+    },
     "node_modules/@types/node": {
       "version": "20.19.9",
       "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
@@ -2515,6 +2526,12 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/core-util-is": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
+      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
+      "license": "MIT"
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
@@ -3924,6 +3941,12 @@
         "node": ">= 4"
       }
     },
+    "node_modules/immediate": {
+      "version": "3.0.6",
+      "resolved": "https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz",
+      "integrity": "sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==",
+      "license": "MIT"
+    },
     "node_modules/immer": {
       "version": "10.1.1",
       "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.1.tgz",
@@ -3961,6 +3984,12 @@
         "node": ">=0.8.19"
       }
     },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "license": "ISC"
+    },
     "node_modules/internal-slot": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
@@ -4504,6 +4533,18 @@
         "node": ">=4.0"
       }
     },
+    "node_modules/jszip": {
+      "version": "3.10.1",
+      "resolved": "https://registry.npmjs.org/jszip/-/jszip-3.10.1.tgz",
+      "integrity": "sha512-xXDvecyTpGLrqFrvkrUSoxxfJI5AH7U8zxxtVclpsUtMCq4JQ290LY8AW5c7Ggnr/Y/oK+bQMbqK2qmtk3pN4g==",
+      "license": "(MIT OR GPL-3.0-or-later)",
+      "dependencies": {
+        "lie": "~3.3.0",
+        "pako": "~1.0.2",
+        "readable-stream": "~2.3.6",
+        "setimmediate": "^1.0.5"
+      }
+    },
     "node_modules/keyv": {
       "version": "4.5.4",
       "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
@@ -4548,6 +4589,15 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/lie": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
+      "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
+      "license": "MIT",
+      "dependencies": {
+        "immediate": "~3.0.5"
+      }
+    },
     "node_modules/lightningcss": {
       "version": "1.30.1",
       "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
@@ -5255,6 +5305,12 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/pako": {
+      "version": "1.0.11",
+      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
+      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
+      "license": "(MIT AND Zlib)"
+    },
     "node_modules/papaparse": {
       "version": "5.5.3",
       "resolved": "https://registry.npmjs.org/papaparse/-/papaparse-5.5.3.tgz",
@@ -5369,6 +5425,12 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
+      "license": "MIT"
+    },
     "node_modules/prop-types": {
       "version": "15.8.1",
       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
@@ -5478,6 +5540,27 @@
         }
       }
     },
+    "node_modules/readable-stream": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
+      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
+      "license": "MIT",
+      "dependencies": {
+        "core-util-is": "~1.0.0",
+        "inherits": "~2.0.3",
+        "isarray": "~1.0.0",
+        "process-nextick-args": "~2.0.0",
+        "safe-buffer": "~5.1.1",
+        "string_decoder": "~1.1.1",
+        "util-deprecate": "~1.0.1"
+      }
+    },
+    "node_modules/readable-stream/node_modules/isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
+      "license": "MIT"
+    },
     "node_modules/recharts": {
       "version": "3.1.0",
       "resolved": "https://registry.npmjs.org/recharts/-/recharts-3.1.0.tgz",
@@ -5666,6 +5749,12 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "license": "MIT"
+    },
     "node_modules/safe-push-apply": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
@@ -5769,6 +5858,12 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/setimmediate": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
+      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==",
+      "license": "MIT"
+    },
     "node_modules/sharp": {
       "version": "0.34.3",
       "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
@@ -5951,6 +6046,15 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
     "node_modules/string.prototype.includes": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
@@ -6451,6 +6555,12 @@
         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "license": "MIT"
+    },
     "node_modules/victory-vendor": {
       "version": "37.3.6",
       "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-37.3.6.tgz",
diff --git a/package.json b/package.json
index 6850d6e..f3ec064 100644
--- a/package.json
+++ b/package.json
@@ -9,9 +9,11 @@
     "lint": "next lint"
   },
   "dependencies": {
+    "@types/jszip": "^3.4.0",
     "@types/papaparse": "^5.3.16",
     "@types/recharts": "^1.8.29",
     "date-fns": "^4.1.0",
+    "jszip": "^3.10.1",
     "lucide-react": "^0.534.0",
     "next": "15.4.5",
     "papaparse": "^5.5.3",
diff --git a/src/app/page.tsx b/src/app/page.tsx
index 5c63c54..6b86d9e 100644
--- a/src/app/page.tsx
+++ b/src/app/page.tsx
@@ -24,7 +24,7 @@ export default function HomePage() {
       const parsedData = WhatsAppParser.parseChat(content);
       
       if (parsedData.messages.length === 0) {
-        throw new Error('No messages found in the uploaded file. Please check that you uploaded a valid WhatsApp chat export.');
+        throw new Error('No messages found in the uploaded file. Please check that you uploaded a valid WhatsApp chat export (.txt or .zip file).');
       }
       
       // Set default date range to last month
diff --git a/src/components/Dashboard.tsx b/src/components/Dashboard.tsx
index aeff484..8fd6e50 100644
--- a/src/components/Dashboard.tsx
+++ b/src/components/Dashboard.tsx
@@ -3,7 +3,7 @@
 import { useState } from 'react';
 import { AnalyticsData, ChatData, DateRange } from '@/types/chat';
 import { ChatAnalytics } from '@/utils/analytics';
-import { BarChart3, Clock, Calendar, Users, MessageSquare, Timer, Zap, Smile } from 'lucide-react';
+import { BarChart3, Clock, Calendar, Users, MessageSquare, Timer, Zap, Smile, Grid3X3, ChevronLeft } from 'lucide-react';
 import MessagesByDayChart from './charts/MessagesByDayChart';
 import MessagesByHourChart from './charts/MessagesByHourChart';
 import MessagesByParticipantChart from './charts/MessagesByParticipantChart';
@@ -13,6 +13,7 @@ import ConversationStartersChart from './charts/ConversationStartersChart';
 import EmojiAnalysisChart from './charts/EmojiAnalysisChart';
 import StatsCards from './StatsCards';
 import DateRangePicker from './DateRangePicker';
+import MultiGraphManager from './MultiGraphManager';
 
 interface DashboardProps {
   analyticsData: AnalyticsData;
@@ -77,6 +78,7 @@ const chartOptions: ChartOption[] = [
 
 export default function Dashboard({ analyticsData, chatData, selectedDateRange, onDateRangeChange }: DashboardProps) {
   const [selectedCharts, setSelectedCharts] = useState<ChartType[]>(['messagesByDay', 'responseTime', 'conversationStarters']);
+  const [showMultiGraph, setShowMultiGraph] = useState(false);
   
   const dateRangePresets = ChatAnalytics.getDateRangePresets(chatData);
 
@@ -113,25 +115,59 @@ export default function Dashboard({ analyticsData, chatData, selectedDateRange,
     <div className="space-y-8">
       {/* Header with Date Range Picker */}
       <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6">
-        <div>
-          <h1 className="text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
-            Conversation Analytics
-          </h1>
-          <p className="text-gray-600 font-medium mt-1">
-            Showing {analyticsData.filteredMessageCount.toLocaleString()} of {analyticsData.totalMessageCount.toLocaleString()} messages
-          </p>
+        <div className="flex items-center space-x-4">
+          {showMultiGraph && (
+            <button
+              onClick={() => setShowMultiGraph(false)}
+              className="group flex items-center space-x-2 px-4 py-2 bg-white/60 backdrop-blur-xl border border-gray-200/50 rounded-xl shadow-lg hover:shadow-xl hover:bg-white/80 focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2 transition-all duration-300"
+            >
+              <ChevronLeft className="h-4 w-4 text-gray-600" />
+              <span className="text-sm font-semibold text-gray-700">Back to Overview</span>
+            </button>
+          )}
+          <div>
+            <h1 className="text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
+              {showMultiGraph ? 'Multi-Graph Comparison' : 'Conversation Analytics'}
+            </h1>
+            <p className="text-gray-600 font-medium mt-1">
+              {showMultiGraph 
+                ? 'Compare insights across different time periods'
+                : `Showing ${analyticsData.filteredMessageCount.toLocaleString()} of ${analyticsData.totalMessageCount.toLocaleString()} messages`
+              }
+            </p>
+          </div>
         </div>
         
-        <DateRangePicker
-          selectedRange={selectedDateRange}
-          presets={dateRangePresets}
-          onRangeChange={onDateRangeChange}
-        />
+        <div className="flex items-center space-x-3">
+          {!showMultiGraph && (
+            <button
+              onClick={() => setShowMultiGraph(true)}
+              className="group flex items-center space-x-3 px-6 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-2xl shadow-lg hover:shadow-xl hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500/30 focus:ring-offset-2 transition-all duration-300"
+            >
+              <Grid3X3 className="h-5 w-5" />
+              <span className="font-semibold">Multi-Graph</span>
+            </button>
+          )}
+          
+          {!showMultiGraph && (
+            <DateRangePicker
+              selectedRange={selectedDateRange}
+              presets={dateRangePresets}
+              onRangeChange={onDateRangeChange}
+            />
+          )}
+        </div>
       </div>
 
-      <StatsCards analyticsData={analyticsData} chatData={chatData} />
-      
-      <div className="bg-white/60 backdrop-blur-xl rounded-3xl p-8 border border-gray-200/50 shadow-lg">
+      {showMultiGraph ? (
+        <MultiGraphManager 
+          chatData={chatData} 
+        />
+      ) : (
+        <>
+          <StatsCards analyticsData={analyticsData} chatData={chatData} />
+          
+          <div className="bg-white/60 backdrop-blur-xl rounded-3xl p-8 border border-gray-200/50 shadow-lg">
         <div className="text-center mb-8">
           <h2 className="text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent mb-2">
             Choose Your Visualizations
@@ -211,15 +247,17 @@ export default function Dashboard({ analyticsData, chatData, selectedDateRange,
         })}
       </div>
 
-      {selectedCharts.length === 0 && (
-        <div className="bg-white/40 backdrop-blur-xl rounded-3xl p-16 text-center border border-gray-200/50 shadow-lg">
-          <div className="relative inline-block mb-6">
-            <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-600 rounded-3xl blur-xl opacity-20 scale-110"></div>
-            <BarChart3 className="relative h-16 w-16 text-gray-400" />
-          </div>
-          <h3 className="text-2xl font-bold text-gray-900 mb-3">No Visualizations Selected</h3>
-          <p className="text-lg text-gray-600 font-medium">Choose chart types above to explore your conversation insights.</p>
-        </div>
+          {selectedCharts.length === 0 && (
+            <div className="bg-white/40 backdrop-blur-xl rounded-3xl p-16 text-center border border-gray-200/50 shadow-lg">
+              <div className="relative inline-block mb-6">
+                <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-600 rounded-3xl blur-xl opacity-20 scale-110"></div>
+                <BarChart3 className="relative h-16 w-16 text-gray-400" />
+              </div>
+              <h3 className="text-2xl font-bold text-gray-900 mb-3">No Visualizations Selected</h3>
+              <p className="text-lg text-gray-600 font-medium">Choose chart types above to explore your conversation insights.</p>
+            </div>
+          )}
+        </>
       )}
     </div>
   );
diff --git a/src/components/DateRangePicker.tsx b/src/components/DateRangePicker.tsx
index 5ab648f..bd6b9d7 100644
--- a/src/components/DateRangePicker.tsx
+++ b/src/components/DateRangePicker.tsx
@@ -56,7 +56,7 @@ export default function DateRangePicker({ selectedRange, presets, onRangeChange
               </div>
               
               <div className="space-y-2">
-                {presets.map((preset, index) => {
+                {presets.map((preset) => {
                   const isSelected = preset.label === selectedRange.label;
                   
                   return (
diff --git a/src/components/FileUpload.tsx b/src/components/FileUpload.tsx
index 80ab6fc..fca9045 100644
--- a/src/components/FileUpload.tsx
+++ b/src/components/FileUpload.tsx
@@ -2,7 +2,8 @@
 
 import { useCallback } from 'react';
 import { useDropzone } from 'react-dropzone';
-import { Upload, FileText } from 'lucide-react';
+import { Upload, FileText, Archive } from 'lucide-react';
+import JSZip from 'jszip';
 
 interface FileUploadProps {
   onFileUpload: (content: string) => void;
@@ -10,22 +11,50 @@ interface FileUploadProps {
 }
 
 export default function FileUpload({ onFileUpload, isLoading }: FileUploadProps) {
-  const onDrop = useCallback((acceptedFiles: File[]) => {
+  const onDrop = useCallback(async (acceptedFiles: File[]) => {
     const file = acceptedFiles[0];
     if (file) {
-      const reader = new FileReader();
-      reader.onload = (e) => {
-        const content = e.target?.result as string;
-        onFileUpload(content);
-      };
-      reader.readAsText(file);
+      try {
+        if (file.name.toLowerCase().endsWith('.zip')) {
+          // Handle ZIP files
+          const arrayBuffer = await file.arrayBuffer();
+          const zip = new JSZip();
+          const zipContent = await zip.loadAsync(arrayBuffer);
+          
+          // Look for .txt files in the ZIP
+          const txtFiles = Object.keys(zipContent.files).filter(
+            name => name.toLowerCase().endsWith('.txt') && !zipContent.files[name].dir
+          );
+          
+          if (txtFiles.length === 0) {
+            throw new Error('No .txt files found in the ZIP archive. Please make sure your WhatsApp export contains a text file.');
+          }
+          
+          // Use the first .txt file found
+          const txtFile = zipContent.files[txtFiles[0]];
+          const content = await txtFile.async('string');
+          onFileUpload(content);
+        } else {
+          // Handle regular .txt files
+          const reader = new FileReader();
+          reader.onload = (e) => {
+            const content = e.target?.result as string;
+            onFileUpload(content);
+          };
+          reader.readAsText(file);
+        }
+      } catch (error) {
+        console.error('Error processing file:', error);
+        onFileUpload(''); // This will trigger an error in the parent component
+      }
     }
   }, [onFileUpload]);
 
   const { getRootProps, getInputProps, isDragActive } = useDropzone({
     onDrop,
     accept: {
-      'text/plain': ['.txt']
+      'text/plain': ['.txt'],
+      'application/zip': ['.zip']
     },
     multiple: false,
     disabled: isLoading
@@ -64,7 +93,11 @@ export default function FileUpload({ onFileUpload, isLoading }: FileUploadProps)
                 </div>
               ) : (
                 <div className="relative bg-gradient-to-r from-gray-100 to-gray-200 p-6 rounded-3xl shadow-lg group-hover:from-blue-500 group-hover:to-purple-600 transition-all duration-300">
-                  <FileText className="h-12 w-12 text-gray-500 group-hover:text-white transition-colors duration-300" />
+                  <div className="flex items-center space-x-3">
+                    <FileText className="h-10 w-10 text-gray-500 group-hover:text-white transition-colors duration-300" />
+                    <div className="text-gray-400 group-hover:text-white transition-colors duration-300 text-xl font-light">or</div>
+                    <Archive className="h-10 w-10 text-gray-500 group-hover:text-white transition-colors duration-300" />
+                  </div>
                 </div>
               )}
             </div>
@@ -75,7 +108,7 @@ export default function FileUpload({ onFileUpload, isLoading }: FileUploadProps)
               {isLoading ? 'Processing Your Chat...' : isDragActive ? 'Drop Your File Here' : 'Upload WhatsApp Export'}
             </h3>
             <p className="text-lg text-gray-600 font-medium">
-              {isLoading ? 'Analyzing conversation patterns...' : 'Drag and drop your .txt file, or click to browse'}
+              {isLoading ? 'Analyzing conversation patterns...' : 'Drag and drop your .txt or .zip file, or click to browse'}
             </p>
           </div>
           
@@ -91,6 +124,10 @@ export default function FileUpload({ onFileUpload, isLoading }: FileUploadProps)
                   <div className="w-1.5 h-1.5 bg-purple-500 rounded-full"></div>
                   <p>More ‚Üí Export chat ‚Üí &quot;Without Media&quot;</p>
                 </div>
+                <div className="flex items-center space-x-2">
+                  <div className="w-1.5 h-1.5 bg-green-500 rounded-full"></div>
+                  <p>Upload the .zip file directly (no need to extract!)</p>
+                </div>
               </div>
             </div>
           )}
diff --git a/src/components/MultiGraphManager.tsx b/src/components/MultiGraphManager.tsx
new file mode 100644
index 0000000..9324a2f
--- /dev/null
+++ b/src/components/MultiGraphManager.tsx
@@ -0,0 +1,286 @@
+'use client';
+
+import { useState } from 'react';
+import { AnalyticsData, ChatData, DateRange } from '@/types/chat';
+import { ChatAnalytics } from '@/utils/analytics';
+import { Plus, X, Copy, BarChart3, Settings } from 'lucide-react';
+import DateRangePicker from './DateRangePicker';
+import MessagesByDayChart from './charts/MessagesByDayChart';
+import MessagesByHourChart from './charts/MessagesByHourChart';
+import MessagesByParticipantChart from './charts/MessagesByParticipantChart';
+import WordFrequencyChart from './charts/WordFrequencyChart';
+import ResponseTimeChart from './charts/ResponseTimeChart';
+import ConversationStartersChart from './charts/ConversationStartersChart';
+import EmojiAnalysisChart from './charts/EmojiAnalysisChart';
+
+type ChartType = 'messagesByDay' | 'messagesByHour' | 'messagesByParticipant' | 'wordFrequency' | 'responseTime' | 'conversationStarters' | 'emojiAnalysis';
+
+interface ChartConfig {
+  id: string;
+  type: ChartType;
+  dateRange: DateRange;
+  analyticsData: AnalyticsData;
+  title: string;
+}
+
+interface ChartOption {
+  id: ChartType;
+  name: string;
+  description: string;
+}
+
+const chartOptions: ChartOption[] = [
+  { id: 'messagesByDay', name: 'Messages by Day', description: 'Daily message activity' },
+  { id: 'messagesByHour', name: 'Messages by Hour', description: 'Hourly patterns' },
+  { id: 'messagesByParticipant', name: 'Messages by Participant', description: 'Participant breakdown' },
+  { id: 'responseTime', name: 'Response Time Analysis', description: 'Response speed analysis' },
+  { id: 'conversationStarters', name: 'Conversation Starters', description: 'Who starts conversations' },
+  { id: 'emojiAnalysis', name: 'Emoji Analysis', description: 'Emoji usage patterns' },
+  { id: 'wordFrequency', name: 'Word Frequency', description: 'Most common words' }
+];
+
+interface MultiGraphManagerProps {
+  chatData: ChatData;
+}
+
+export default function MultiGraphManager({ chatData }: MultiGraphManagerProps) {
+  const [chartConfigs, setChartConfigs] = useState<ChartConfig[]>([]);
+  const [showAddDialog, setShowAddDialog] = useState(false);
+  const [selectedChartType, setSelectedChartType] = useState<ChartType>('messagesByParticipant');
+  
+  const dateRangePresets = ChatAnalytics.getDateRangePresets(chatData);
+
+  const addChart = (type: ChartType, dateRange: DateRange) => {
+    const analyticsData = ChatAnalytics.analyzeChat(chatData, dateRange);
+    const chartOption = chartOptions.find(opt => opt.id === type);
+    
+    const newConfig: ChartConfig = {
+      id: Date.now().toString(),
+      type,
+      dateRange,
+      analyticsData,
+      title: `${chartOption?.name} - ${dateRange.label}`
+    };
+    
+    setChartConfigs(prev => [...prev, newConfig]);
+    setShowAddDialog(false);
+  };
+
+  const removeChart = (id: string) => {
+    setChartConfigs(prev => prev.filter(config => config.id !== id));
+  };
+
+  const duplicateChart = (config: ChartConfig) => {
+    const newConfig: ChartConfig = {
+      ...config,
+      id: Date.now().toString(),
+      title: `${config.title} (Copy)`
+    };
+    setChartConfigs(prev => [...prev, newConfig]);
+  };
+
+  const updateChartDateRange = (id: string, newDateRange: DateRange) => {
+    setChartConfigs(prev => prev.map(config => {
+      if (config.id === id) {
+        const analyticsData = ChatAnalytics.analyzeChat(chatData, newDateRange);
+        const chartOption = chartOptions.find(opt => opt.id === config.type);
+        return {
+          ...config,
+          dateRange: newDateRange,
+          analyticsData,
+          title: `${chartOption?.name} - ${newDateRange.label}`
+        };
+      }
+      return config;
+    }));
+  };
+
+  const renderChart = (config: ChartConfig) => {
+    const { type, analyticsData } = config;
+    
+    switch (type) {
+      case 'messagesByDay':
+        return <MessagesByDayChart data={analyticsData.messagesByDay} />;
+      case 'messagesByHour':
+        return <MessagesByHourChart data={analyticsData.messagesByHour} />;
+      case 'messagesByParticipant':
+        return <MessagesByParticipantChart data={analyticsData.messagesByParticipant} />;
+      case 'responseTime':
+        return <ResponseTimeChart data={analyticsData.responseTimeAnalysis.responseTimesByParticipant} />;
+      case 'conversationStarters':
+        return <ConversationStartersChart data={analyticsData.conversationStarters} />;
+      case 'emojiAnalysis':
+        return <EmojiAnalysisChart data={analyticsData.emojiAnalysis.topEmojis} />;
+      case 'wordFrequency':
+        return <WordFrequencyChart data={analyticsData.wordFrequency} />;
+      default:
+        return null;
+    }
+  };
+
+  return (
+    <div className="space-y-8">
+      {/* Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h2 className="text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
+            Multi-Graph Comparison
+          </h2>
+          <p className="text-gray-600 font-medium mt-1">
+            Compare insights across different time periods
+          </p>
+        </div>
+        
+        <button
+          onClick={() => setShowAddDialog(true)}
+          className="group flex items-center space-x-3 px-6 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl shadow-lg hover:shadow-xl hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2 transition-all duration-300"
+        >
+          <Plus className="h-5 w-5" />
+          <span className="font-semibold">Add Chart</span>
+        </button>
+      </div>
+
+      {/* Charts Grid */}
+      {chartConfigs.length > 0 && (
+        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
+          {chartConfigs.map((config) => (
+            <div key={config.id} className="group bg-white/60 backdrop-blur-xl rounded-3xl border border-gray-200/50 shadow-lg hover:shadow-2xl transition-all duration-500">
+              {/* Chart Header */}
+              <div className="flex items-center justify-between p-6 border-b border-gray-200/50">
+                <div className="flex-1">
+                  <h3 className="text-lg font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
+                    {config.title}
+                  </h3>
+                  <p className="text-sm text-gray-600 mt-1">
+                    {config.analyticsData.filteredMessageCount.toLocaleString()} messages
+                  </p>
+                </div>
+                
+                <div className="flex items-center space-x-2">
+                  <DateRangePicker
+                    selectedRange={config.dateRange}
+                    presets={dateRangePresets}
+                    onRangeChange={(range) => updateChartDateRange(config.id, range)}
+                  />
+                  
+                  <button
+                    onClick={() => duplicateChart(config)}
+                    className="p-2 text-gray-500 hover:text-blue-600 hover:bg-blue-50 rounded-xl transition-all duration-200"
+                    title="Duplicate chart"
+                  >
+                    <Copy className="h-4 w-4" />
+                  </button>
+                  
+                  <button
+                    onClick={() => removeChart(config.id)}
+                    className="p-2 text-gray-500 hover:text-red-600 hover:bg-red-50 rounded-xl transition-all duration-200"
+                    title="Remove chart"
+                  >
+                    <X className="h-4 w-4" />
+                  </button>
+                </div>
+              </div>
+              
+              {/* Chart Content */}
+              <div className="p-6">
+                {renderChart(config)}
+              </div>
+            </div>
+          ))}
+        </div>
+      )}
+
+      {/* Empty State */}
+      {chartConfigs.length === 0 && (
+        <div className="bg-white/40 backdrop-blur-xl rounded-3xl p-16 text-center border border-gray-200/50 shadow-lg">
+          <div className="relative inline-block mb-6">
+            <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-600 rounded-3xl blur-xl opacity-20 scale-110"></div>
+            <BarChart3 className="relative h-16 w-16 text-gray-400" />
+          </div>
+          <h3 className="text-2xl font-bold text-gray-900 mb-3">No Comparison Charts</h3>
+          <p className="text-lg text-gray-600 font-medium mb-6">
+            Create multiple charts to compare insights across different time periods.
+          </p>
+          <button
+            onClick={() => setShowAddDialog(true)}
+            className="inline-flex items-center space-x-2 px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl shadow-lg hover:shadow-xl hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500/30 focus:ring-offset-2 transition-all duration-300"
+          >
+            <Plus className="h-5 w-5" />
+            <span className="font-semibold">Add Your First Chart</span>
+          </button>
+        </div>
+      )}
+
+      {/* Add Chart Dialog */}
+      {showAddDialog && (
+        <>
+          <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50" onClick={() => setShowAddDialog(false)} />
+          <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
+            <div className="bg-white/90 backdrop-blur-xl rounded-3xl p-8 max-w-2xl w-full border border-gray-200/50 shadow-2xl">
+              <div className="flex items-center justify-between mb-6">
+                <div className="flex items-center space-x-3">
+                  <div className="bg-gradient-to-r from-blue-500 to-purple-600 p-3 rounded-2xl">
+                    <Settings className="h-6 w-6 text-white" />
+                  </div>
+                  <h3 className="text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
+                    Add New Chart
+                  </h3>
+                </div>
+                <button
+                  onClick={() => setShowAddDialog(false)}
+                  className="p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-xl transition-all duration-200"
+                >
+                  <X className="h-5 w-5" />
+                </button>
+              </div>
+
+              <div className="space-y-6">
+                <div>
+                  <label className="block text-sm font-semibold text-gray-700 mb-3">
+                    Select Chart Type
+                  </label>
+                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
+                    {chartOptions.map((option) => (
+                      <button
+                        key={option.id}
+                        onClick={() => setSelectedChartType(option.id)}
+                        className={`p-4 text-left rounded-2xl border-2 transition-all duration-200 ${
+                          selectedChartType === option.id
+                            ? 'border-blue-400/50 bg-gradient-to-br from-blue-50/80 to-purple-50/80'
+                            : 'border-gray-200/50 bg-white/40 hover:border-blue-300/50'
+                        }`}
+                      >
+                        <div className="font-semibold text-gray-900">{option.name}</div>
+                        <div className="text-sm text-gray-600 mt-1">{option.description}</div>
+                      </button>
+                    ))}
+                  </div>
+                </div>
+
+                <div>
+                  <label className="block text-sm font-semibold text-gray-700 mb-3">
+                    Select Time Range
+                  </label>
+                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
+                    {dateRangePresets.map((preset) => (
+                      <button
+                        key={preset.label}
+                        onClick={() => addChart(selectedChartType, preset)}
+                        className="p-4 text-left rounded-2xl border-2 border-gray-200/50 bg-white/40 hover:border-blue-300/50 hover:bg-gradient-to-br hover:from-blue-50/40 hover:to-purple-50/40 transition-all duration-200"
+                      >
+                        <div className="font-semibold text-gray-900">{preset.label}</div>
+                        <div className="text-sm text-gray-600 mt-1">
+                          {preset.start.toLocaleDateString()} - {preset.end.toLocaleDateString()}
+                        </div>
+                      </button>
+                    ))}
+                  </div>
+                </div>
+              </div>
+            </div>
+          </div>
+        </>
+      )}
+    </div>
+  );
+}
\ No newline at end of file
diff --git a/src/components/StatsCards.tsx b/src/components/StatsCards.tsx
index e47ede5..a77909c 100644
--- a/src/components/StatsCards.tsx
+++ b/src/components/StatsCards.tsx
@@ -1,7 +1,7 @@
 'use client';
 
 import { AnalyticsData, ChatData } from '@/types/chat';
-import { MessageCircle, Users, Calendar, TrendingUp, Timer, Zap, Smile } from 'lucide-react';
+import { MessageCircle, Users, Timer, Smile } from 'lucide-react';
 import { format } from 'date-fns';
 
 interface StatsCardsProps {
diff --git a/src/components/charts/EmojiAnalysisChart.tsx b/src/components/charts/EmojiAnalysisChart.tsx
index 22317a2..4b44547 100644
--- a/src/components/charts/EmojiAnalysisChart.tsx
+++ b/src/components/charts/EmojiAnalysisChart.tsx
@@ -10,20 +10,26 @@ export default function EmojiAnalysisChart({ data }: EmojiAnalysisChartProps) {
   const topEmojis = data.slice(0, 10);
 
   return (
-    <ResponsiveContainer width="100%" height={300}>
+    <ResponsiveContainer width="100%" height={350}>
       <BarChart data={topEmojis}>
         <CartesianGrid strokeDasharray="3 3" />
         <XAxis 
           dataKey="emoji" 
-          tick={{ fontSize: 16 }}
-          height={50}
+          tick={{ fontSize: 24 }}
+          height={60}
+          interval={0}
         />
         <YAxis 
           tick={{ fontSize: 12 }}
         />
         <Tooltip 
           formatter={(value: number) => [value, 'Uses']}
-          labelFormatter={(label) => `${label} emoji`}
+          labelFormatter={(label) => (
+            <div className="flex items-center space-x-2">
+              <span style={{ fontSize: '32px' }}>{label}</span>
+              <span>emoji</span>
+            </div>
+          )}
           itemStyle={{ color: '#1F2937' }}
           contentStyle={{ 
             backgroundColor: '#F9FAFB', 
-- 
2.39.5 (Apple Git-154)

